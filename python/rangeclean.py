#!/usr/bin/python2.7
import os
import srglib
import argparse  # note: requires Python 2.7+

def readRangeMap(filename):
    rangeMap = {}
    for line in file(filename).readlines():
        tokens = line.strip().split("|")
        if tokens[0] != "@": continue
        
        filename = tokens[1].replace('\\', '/')
        data = '|'.join(tokens[2:])

        if not rangeMap.has_key(filename):
            rangeMap[filename] = []
        rangeMap[filename].append(data)
        
    for filename in sorted(rangeMap.keys()):
        rangeMap[filename] = sorted(set(rangeMap[filename]), lambda x,y: int(x.split('|')[0]) - int(y.split('|')[0]))

    return rangeMap

def main():
    parser = argparse.ArgumentParser(description="Clean RangeMap files, delete duplicates,a nd sort output")
    parser.add_argument("--srcRangeMap", help="Source range map generated by srg2source", required=True)
    parser.add_argument("--outRangeMap", help="Output range map file to place clean data", required=True)
    options = parser.parse_args()

    range = readRangeMap(options.srcRangeMap)
    
    print 'Writing clean'
    with open(options.outRangeMap, 'wb') as fh:
        for key in sorted(range.keys()):
            fh.write('Processing %s\n' % key)
            for data in range[key]:
                fh.write('@|%s\n' % (data))
        fh.close()

if __name__ == "__main__":
    main()

